//===--- A64Subtarget.h - Define Subtarget for the A64 ---------*- C++ -*--===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the A64 specific subclass of TargetSubtarget.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_A64_A64SUBTARGET_H
#define LLVM_LIB_TARGET_A64_A64SUBTARGET_H

#include "A64FrameLowering.h"
#include "A64ISelLowering.h"
#include "A64InstrInfo.h"
#include "A64SelectionDAGInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "A64GenSubtargetInfo.inc"

namespace llvm {
class GlobalValue;
class StringRef;
class Triple;

class A64Subtarget final : public A64GenSubtargetInfo {
  A64InstrInfo InstrInfo;
  A64TargetLowering TLInfo;
  A64SelectionDAGInfo TSInfo;
  A64FrameLowering FrameLowering;

public:
  A64Subtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
               const TargetMachine &TM);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

  const A64InstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const A64RegisterInfo *getRegisterInfo() const override {
    return &getInstrInfo()->getRegisterInfo();
  }
  const A64TargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const A64FrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const A64SelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

private:
  /// initializeSubtargetDependencies - Initializes using CPUString and the
  /// passed in feature string so that we can use initializer lists for
  /// subtarget initialization.
  A64Subtarget &initializeSubtargetDependencies(StringRef FS,
                                                StringRef CPUString);
};

} // namespace llvm
#endif
